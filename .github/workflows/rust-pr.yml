name: Rust PR

on:
  pull_request:

jobs:
  build_linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [x86_64-unknown-linux-gnu]
    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: ${{ matrix.target == 'x86_64-unknown-linux-gnu' && '-C link-arg=-Wl,--as-needed' || '' }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        profile: minimal
        override: true
    - name: Lint
      run: cargo clippy --all-targets -- -D warnings
    - name: Test
      run: cargo test --target ${{ matrix.target }}
    - name: Format
      run: cargo fmt --all -- --check
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

  build_universal:
    runs-on: macos-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    - name: Add targets
      run: |
        rustup target add x86_64-apple-darwin
        rustup target add aarch64-apple-darwin
    - name: Lint
      run: cargo clippy --all-targets -- -D warnings
    - name: Test
      run: cargo test
    - name: Format
      run: cargo fmt --all -- --check
    - name: Build
      run: |
        cargo build --release --target x86_64-apple-darwin
        cargo build --release --target aarch64-apple-darwin
    - name: Create universal binary
      run: |
        mkdir -p target/universal/release
        lipo -create -output target/universal/release/linksmith \
            target/x86_64-apple-darwin/release/linksmith \
            target/aarch64-apple-darwin/release/linksmith
