name: Rust

on:
  push:
    branches: [main]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [aarch64-apple-darwin, x86_64-unknown-linux-gnu]
        exclude:
        - os: ubuntu-latest
          target: aarch64-apple-darwin
        - os: macos-latest
          target: x86_64-unknown-linux-gnu
    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: ${{ matrix.target == 'x86_64-unknown-linux-gnu' && '-C link-arg=-Wl,--as-needed' || '' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: ${{ matrix.rust_target }}

    - name: Add aarch64 target for Rust
      run: rustup target add aarch64-apple-darwin
      if: startsWith(matrix.os, 'macOS')

    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Run cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -D warnings

    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose

    - name: Build release binary
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.rust_target }}

    - name: Upload release binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.rust_target }}
        path: target/${{ matrix.rust_target }}/release/markdown-link-converter
